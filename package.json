{
  "name": "tinypixo",
  "version": "0.1.0",
  "private": true,
  "scripts": {
    "dev": "next dev",
    "build": "next build",
    "start": "next start",
    "lint": "next lint",
    "dev:services": "tsx scripts/start-dev-services.ts",
    "dev:services:stop": "docker-compose -f docker-compose.dev.yml down",
    "dev:services:logs": "docker-compose -f docker-compose.dev.yml logs -f",
    "test": "vitest --run",
    "test:watch": "vitest",
    "test:unit": "vitest --run test/unit/",
    "test:integration": "vitest --run test/integration/",
    "test:performance": "vitest --run test/performance/",
    "test:validation": "vitest --run test/comprehensive-validation.test.ts",
    "test:docker": "docker-compose -f docker-compose.test.yml up --build --abort-on-container-exit test-runner",
    "test:docker:setup": "docker-compose -f docker-compose.test.yml up -d localstack dynamodb-local redis",
    "test:docker:teardown": "docker-compose -f docker-compose.test.yml down -v",
    "test:restart": "docker-compose -f docker-compose.test.yml --profile restart-test up --build",
    "test:coverage": "vitest --run --coverage",
    "test:comprehensive": "tsx scripts/run-comprehensive-tests.ts",
    "test:fixtures": "tsx test/fixtures/generate-test-files.ts",
    "test:fixtures:cleanup": "tsx test/fixtures/generate-test-files.ts cleanup",
    "test:validate": "tsx scripts/validate-comprehensive-tests.ts",
    "test:job-service": "vitest --run lib/job-service.test.ts",
    "view:jobs": "tsx scripts/view-jobs.ts",
    "test:connectivity": "tsx scripts/test-connectivity.ts",
    "test:redis-failover": "tsx scripts/test-redis-failover-production.ts",
    "validate:redis-fix": "tsx scripts/validate-redis-failover-fix.ts",
    "test:aws-connectivity": "tsx scripts/test-aws-connectivity.ts",
    "setup:aws-resources": "tsx scripts/setup-aws-resources.ts",
    "check:aws-resources": "tsx scripts/check-aws-resources.ts",
    "create:redis-cluster": "tsx scripts/create-redis-cluster.ts",
    "set:redis-endpoint": "tsx scripts/set-redis-endpoint.ts",
    "setup:vpc-connector": "tsx scripts/setup-apprunner-vpc-connector.ts",
    "test:apprunner-no-redis": "tsx scripts/test-apprunner-without-redis.ts",
    "diagnose:redis": "tsx scripts/diagnose-app-runner-redis.ts",
    "fix:redis-security": "tsx scripts/fix-redis-security-groups.ts",
    "test:redis-connection": "tsx scripts/test-redis-connection.ts",
    "verify:apprunner": "tsx scripts/verify-apprunner-config.ts",
    "check:redis-network": "tsx scripts/check-redis-network-config.ts",
    "fix:default-sg": "tsx scripts/fix-default-security-group.ts",
    "setup:apprunner-vpc": "tsx scripts/setup-apprunner-vpc-access.ts",
    "verify:vpc-connector": "tsx scripts/verify-vpc-connector.ts",
    "diagnose:redis-connectivity": "tsx scripts/diagnose-redis-connectivity.ts",
    "check:elasticache-vpc": "tsx scripts/check-elasticache-vpc.ts",
    "test:redis-new-config": "tsx scripts/test-redis-with-new-config.ts",
    "switch:env": "tsx scripts/switch-environment.ts",
    "inspect:services": "tsx scripts/inspect-services.ts",
    "validate:task-5": "tsx scripts/validate-task-5.ts",
    "browse:s3": "tsx scripts/browse-s3-bucket.ts",
    "validate:task-7": "tsx scripts/validate-task-7.ts",
    "test:streaming-real": "tsx scripts/test-streaming-with-real-file.ts",
    "test:streaming-fixed": "tsx scripts/test-streaming-fixed.ts",
    "test:real-audio": "tsx scripts/test-real-audio-streaming.ts",
    "test:real-aws": "tsx scripts/test-real-aws.ts",
    "test:real-s3": "tsx scripts/test-real-s3-upload.ts",
    "validate:task-9": "tsx scripts/validate-task-9.ts",
    "test:large-download": "tsx scripts/test-large-file-download.ts",
    "test:download-cleanup": "tsx scripts/test-download-cleanup.ts",
    "test:docker-build": "tsx scripts/test-docker-build.ts",
    "dev:apprunner": "docker-compose -f docker-compose.apprunner.yml up --build",
    "dev:apprunner:down": "docker-compose -f docker-compose.apprunner.yml down -v",
    "deploy:production": "tsx scripts/deploy-app-runner-production.ts",
    "validate:production": "tsx scripts/validate-production-deployment.ts",
    "validate:manual": "tsx scripts/validate-manual-deployment.ts",
    "test:load": "tsx scripts/load-test-production.ts",
    "monitor:restarts": "tsx scripts/monitor-container-restarts.ts",
    "test:dockerfile": "tsx scripts/test-dockerfile-dev.ts",
    "fix:network": "tsx scripts/fix-app-runner-network.ts",
    "test:redis-endpoint": "tsx scripts/test-redis-endpoint.ts",
    "verify:security-groups": "tsx scripts/verify-security-groups.ts",
    "diagnose:app-runner": "tsx scripts/diagnose-app-runner-failure.ts",
    "test:redis-detailed": "tsx scripts/test-redis-detailed.ts"
  },
  "dependencies": {
    "@aws-sdk/client-apprunner": "^3.864.0",
    "@aws-sdk/client-cloudwatch-logs": "^3.862.0",
    "@aws-sdk/client-dynamodb": "^3.490.0",
    "@aws-sdk/client-ec2": "^3.864.0",
    "@aws-sdk/client-elasticache": "^3.862.0",
    "@aws-sdk/client-iam": "^3.862.0",
    "@aws-sdk/client-s3": "^3.490.0",
    "@aws-sdk/client-ssm": "^3.862.0",
    "@aws-sdk/client-sts": "^3.862.0",
    "@aws-sdk/lib-storage": "^3.863.0",
    "@aws-sdk/s3-request-presigner": "^3.864.0",
    "@aws-sdk/util-dynamodb": "^3.490.0",
    "@ffmpeg/ffmpeg": "^0.12.7",
    "@ffmpeg/util": "^0.12.1",
    "@types/node-fetch": "^2.6.13",
    "dotenv": "^17.2.1",
    "form-data": "^4.0.4",
    "ioredis": "^5.3.2",
    "next": "^15.3.5",
    "node-fetch": "^3.3.2",
    "react": "^18",
    "react-dom": "^18",
    "redis": "^4.6.12",
    "sharp": "^0.32.6"
  },
  "devDependencies": {
    "@testing-library/jest-dom": "^6.6.4",
    "@testing-library/react": "^16.3.0",
    "@testing-library/user-event": "^14.6.1",
    "@types/node": "^20",
    "@types/react": "^18",
    "@types/react-dom": "^18",
    "@vitest/coverage-v8": "^1.2.0",
    "@vitest/ui": "^1.2.0",
    "autoprefixer": "^10.0.1",
    "eslint": "^8",
    "eslint-config-next": "^15.3.5",
    "jsdom": "^26.1.0",
    "postcss": "^8",
    "tailwindcss": "^3.3.0",
    "tsx": "^4.7.0",
    "typescript": "^5",
    "vitest": "^1.2.0"
  }
}
